# Workflow name
name: Backend Continuous Integration

# Triggers for the workflow
on:
# Manual trigger using the workflow_dispatch event
  workflow_dispatch:

# Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main
# Jobs defined in the workflow
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Specify Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv
      - name: Install dependencies
        run: |
          pip install pipenv
      - name: Run lint
        run: |
          pip install flake8
          cd starter/backend && pipenv run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Specify Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv
      - name: Install dependencies
        run: |
          pip install pipenv
          pip install flake8
      - name: Run lint
        run: |          
          cd starter/backend && pipenv install pytest && pipenv run test
  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Specify Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Build Docker Image
        run: |
          cd starter/backend
          docker build --tag mp-backend:latest .
